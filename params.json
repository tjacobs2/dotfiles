{"name":"Dotfiles","tagline":"A collection of dotfiles for syncing multiple computers","body":"Dotfiles\r\n========\r\nThis repository includes all of my custom dotfiles.  They should be cloned to\r\nyour home directory so that the path is `~/dotfiles/`.  The included setup\r\nscript creates symlinks from your home directory to the files which are located\r\nin `~/dotfiles/`.\r\n\r\nThe setup script is smart enough to back up your existing dotfiles into a\r\n`~/dotfiles_old/` directory if you already have any dotfiles of the same name as\r\nthe dotfile symlinks being created in your home directory.\r\n\r\nI also prefer `zsh` as my shell of choice.  As such, the setup script will also\r\nclone the `oh-my-zsh` repository from my GitHub. It then checks to see if `zsh`\r\nis installed.  If `zsh` is installed, and it is not already configured as the\r\ndefault shell, the setup script will execute a `chsh -s $(which zsh)`.  This\r\nchanges the default shell to zsh, and takes effect as soon as a new zsh is\r\nspawned or on next login.\r\n\r\nSo, to recap, the install script will:\r\n\r\n1. Back up any existing dotfiles in your home directory to `~/dotfiles_old/`\r\n2. Create symlinks to the dotfiles in `~/dotfiles/` in your home directory\r\n3. Clone the `oh-my-zsh` repository from my GitHub (for use with `zsh`)\r\n4. Check to see if `zsh` is installed, if it isn't, try to install it.\r\n5. If zsh is installed, run a `chsh -s` to set it as the default shell.\r\n\r\nInstallation\r\n------------\r\n\r\n``` bash\r\ngit clone git://github.com/michaeljsmalley/dotfiles ~/dotfiles\r\ncd ~/dotfiles\r\n./makesymlinks.sh\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}